{"ast":null,"code":"import _objectSpread from\"C:/Users/ashok.MSI/Projects/2048_game_project/2048_game_project_with_ui/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from\"react\";import GameBoard from\"./components/GameBoard\";import Controls from\"./components/Controls\";import{FaUndo,FaRedo}from\"react-icons/fa\";import{newGame,restart,move}from\"./api/gameApi\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[state,setState]=useState(null);const[size,setSize]=useState(4);const[moveDir,setMoveDir]=useState(null);const[history,setHistory]=useState([]);const[future,setFuture]=useState([]);useEffect(()=>{const fetchNew=async()=>{try{const res=await newGame(size);console.log(\"newGame response:\",res===null||res===void 0?void 0:res.data);const payload=(res===null||res===void 0?void 0:res.data)||{};const board=Array.isArray(payload)?payload:Array.isArray(payload.board)?payload.board:Array.isArray(payload.state)&&Array.isArray(payload.state.board)?payload.state.board:payload.game&&Array.isArray(payload.game.board)?payload.game.board:null;setState(_objectSpread(_objectSpread({},payload),{},{board:board!==null&&board!==void 0?board:Array.from({length:size},()=>Array.from({length:size},()=>0))}));}catch(err){console.error(\"newGame failed\",err);setState({board:Array.from({length:size},()=>Array.from({length:size},()=>0))});}};fetchNew();},[size]);useEffect(()=>{const handleKey=e=>{const map={ArrowUp:'UP',ArrowDown:'DOWN',ArrowLeft:'LEFT',ArrowRight:'RIGHT'};if(map[e.key]){doMove(map[e.key]);}};window.addEventListener('keydown',handleKey);return()=>window.removeEventListener('keydown',handleKey);},[state]);const doMove=useCallback(async dir=>{var _ref,_ref2,_state$gameId;if(!state)return;setMoveDir(dir);setHistory(h=>[...h,state]);// Save current state to history\nsetFuture([]);// Clear redo stack\n// try common id fields\nconst gameId=(_ref=(_ref2=(_state$gameId=state.gameId)!==null&&_state$gameId!==void 0?_state$gameId:state.id)!==null&&_ref2!==void 0?_ref2:state.game&&state.game.id)!==null&&_ref!==void 0?_ref:null;try{var _res$data;const res=await move(gameId,dir);const payload=(_res$data=res===null||res===void 0?void 0:res.data)!==null&&_res$data!==void 0?_res$data:res;// merge new payload onto existing state, preserve board fallback\nsetState(prev=>{var _payload$board;return _objectSpread(_objectSpread(_objectSpread({},prev),payload),{},{board:(_payload$board=payload.board)!==null&&_payload$board!==void 0?_payload$board:prev.board});});}catch(err){console.error(\"move failed\",err);}},[state]);const handleUndo=()=>{if(history.length===0)return;setFuture(f=>[state,...f]);setState(history[history.length-1]);setHistory(history.slice(0,-1));};const handleRedo=()=>{if(future.length===0)return;setHistory(h=>[...h,state]);setState(future[0]);setFuture(future.slice(1));};const handleRestart=()=>{restart(size).then(res=>{var _res$data2;const d=(_res$data2=res===null||res===void 0?void 0:res.data)!==null&&_res$data2!==void 0?_res$data2:res;setState(prev=>{var _ref3,_d$board;return _objectSpread(_objectSpread(_objectSpread({},prev),d),{},{board:(_ref3=(_d$board=d.board)!==null&&_d$board!==void 0?_d$board:prev.board)!==null&&_ref3!==void 0?_ref3:Array.from({length:size},()=>Array.from({length:size},()=>0))});});}).catch(err=>console.error(\"restart failed\",err));};const handleNewSize=s=>{setSize(s);newGame(s).then(res=>{var _res$data3,_d$board2;const d=(_res$data3=res===null||res===void 0?void 0:res.data)!==null&&_res$data3!==void 0?_res$data3:res;setState(_objectSpread(_objectSpread({},d),{},{board:(_d$board2=d.board)!==null&&_d$board2!==void 0?_d$board2:Array.from({length:s},()=>Array.from({length:s},()=>0))}));}).catch(err=>console.error(\"newGame failed\",err));};if(!state)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"app-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"How to Play\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Use arrow keys or buttons to move tiles.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Merge tiles with the same number.\"}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Any single tile that contains 2048 is a win!\"})}),/*#__PURE__*/_jsx(\"li\",{children:\"Undo/Redo your moves anytime.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"2048\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Score: \",state.score]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Size: \"}),/*#__PURE__*/_jsxs(\"select\",{value:size,onChange:e=>handleNewSize(parseInt(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:3,children:\"3x3\"}),/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4x4\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5x5\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRestart,children:\"Restart\"})]})]}),/*#__PURE__*/_jsx(GameBoard,{board:Array.isArray(state.board)?state.board:Array.from({length:size},()=>Array.from({length:size},()=>0)),newTiles:state.newTiles||[],mergedTiles:state.mergedTiles||[]}),/*#__PURE__*/_jsx(Controls,{onMove:doMove}),state.won&&/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:\"You Win!\"}),state.over&&/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:\"Game Over\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"side-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn\",onClick:handleUndo,children:/*#__PURE__*/_jsx(FaUndo,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn\",onClick:handleRedo,children:/*#__PURE__*/_jsx(FaRedo,{})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","GameBoard","Controls","FaUndo","FaRedo","newGame","restart","move","jsx","_jsx","jsxs","_jsxs","App","state","setState","size","setSize","moveDir","setMoveDir","history","setHistory","future","setFuture","fetchNew","res","console","log","data","payload","board","Array","isArray","game","_objectSpread","from","length","err","error","handleKey","e","map","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","key","doMove","window","addEventListener","removeEventListener","dir","_ref","_ref2","_state$gameId","h","gameId","id","_res$data","prev","_payload$board","handleUndo","f","slice","handleRedo","handleRestart","then","_res$data2","d","_ref3","_d$board","catch","handleNewSize","s","_res$data3","_d$board2","children","className","score","value","onChange","parseInt","target","onClick","newTiles","mergedTiles","onMove","won","over"],"sources":["C:/Users/ashok.MSI/Projects/2048_game_project/2048_game_project_with_ui/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport GameBoard from \"./components/GameBoard\";\nimport Controls from \"./components/Controls\";\nimport { FaUndo, FaRedo } from \"react-icons/fa\";\nimport { newGame, restart, move } from \"./api/gameApi\";\n\nexport default function App(){\n  const [state, setState] = useState(null);\n  const [size, setSize] = useState(4);\n  const [moveDir, setMoveDir] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n\n  useEffect(() => {\n    const fetchNew = async () => {\n      try {\n        const res = await newGame(size);\n        console.log(\"newGame response:\", res?.data);\n        const payload = res?.data || {};\n        const board =\n          Array.isArray(payload) ? payload\n          : Array.isArray(payload.board) ? payload.board\n          : Array.isArray(payload.state) && Array.isArray(payload.state.board) ? payload.state.board\n          : payload.game && Array.isArray(payload.game.board) ? payload.game.board\n          : null;\n\n        setState({\n          ...payload,\n          board: board ?? Array.from({ length: size }, () => Array.from({ length: size }, () => 0))\n        });\n      } catch (err) {\n        console.error(\"newGame failed\", err);\n        setState({ board: Array.from({ length: size }, () => Array.from({ length: size }, () => 0)) });\n      }\n    };\n    fetchNew();\n  }, [size]);\n\n  useEffect(()=>{\n    const handleKey = (e) => {\n      const map = {ArrowUp:'UP', ArrowDown:'DOWN', ArrowLeft:'LEFT', ArrowRight:'RIGHT'};\n      if(map[e.key]) { doMove(map[e.key]); }\n    }\n    window.addEventListener('keydown', handleKey);\n    return ()=> window.removeEventListener('keydown', handleKey);\n  }, [state]);\n\n  const doMove = useCallback(async (dir)=>{\n    if (!state) return;\n    setMoveDir(dir);\n    setHistory(h => [...h, state]); // Save current state to history\n    setFuture([]); // Clear redo stack\n\n    // try common id fields\n    const gameId = state.gameId ?? state.id ?? (state.game && state.game.id) ?? null;\n    try {\n      const res = await move(gameId, dir);\n      const payload = res?.data ?? res;\n      // merge new payload onto existing state, preserve board fallback\n      setState(prev => ({\n        ...prev,\n        ...payload,\n        board: payload.board ?? prev.board\n      }));\n    } catch (err) {\n      console.error(\"move failed\", err);\n    }\n  }, [state]);\n\n  const handleUndo = () => {\n    if (history.length === 0) return;\n    setFuture(f => [state, ...f]);\n    setState(history[history.length - 1]);\n    setHistory(history.slice(0, -1));\n  };\n\n  const handleRedo = () => {\n    if (future.length === 0) return;\n    setHistory(h => [...h, state]);\n    setState(future[0]);\n    setFuture(future.slice(1));\n  };\n\n  const handleRestart = () => {\n    restart(size).then(res => {\n      const d = res?.data ?? res;\n      setState(prev => ({\n        ...prev,\n        ...d,\n        board: d.board ?? prev.board ?? Array.from({ length: size }, () => Array.from({ length: size }, () => 0))\n      }));\n    }).catch(err => console.error(\"restart failed\", err));\n  };\n\n  const handleNewSize = (s)=> {\n    setSize(s);\n    newGame(s).then(res => {\n      const d = res?.data ?? res;\n      setState({\n        ...d,\n        board: d.board ?? Array.from({ length: s }, () => Array.from({ length: s }, () => 0))\n      });\n    }).catch(err => console.error(\"newGame failed\", err));\n  };\n\n  if (!state) return <div>Loading...</div>;\n\n  return (\n  <div className=\"app-row\">\n    {/* Instructions Card */}\n    <div className=\"instructions\">\n      <h2>How to Play</h2>\n      <ul>\n        <li>Use arrow keys or buttons to move tiles.</li>\n        <li>Merge tiles with the same number.</li>\n        <li><strong>Any single tile that contains 2048 is a win!</strong></li>\n        <li>Undo/Redo your moves anytime.</li>\n      </ul>\n    </div>\n\n    {/* Main Game Card */}\n    <div className=\"app\">\n      <h1>2048</h1>\n      <div className=\"header\">\n        <div>Score: {state.score}</div>\n        <div>\n          <label>Size: </label>\n          <select value={size} onChange={e=>handleNewSize(parseInt(e.target.value))}>\n            <option value={3}>3x3</option>\n            <option value={4}>4x4</option>\n            <option value={5}>5x5</option>\n          </select>\n          <button onClick={handleRestart}>Restart</button>\n        </div>\n      </div>\n\n      <GameBoard\n        board={Array.isArray(state.board) ? state.board : Array.from({ length: size }, () => Array.from({ length: size }, () => 0))}\n        newTiles={state.newTiles || []}\n        mergedTiles={state.mergedTiles || []}\n      />\n\n      <Controls onMove={doMove} />\n\n      {state.won && <div className=\"overlay\">You Win!</div>}\n      {state.over && <div className=\"overlay\">Game Over</div>}\n    </div>\n\n    {/* Side Controls Card */}\n    <div className=\"side-controls\">\n      <button className=\"icon-btn\" onClick={handleUndo}><FaUndo /></button>\n      <button className=\"icon-btn\" onClick={handleRedo}><FaRedo /></button>\n    </div>\n  </div>\n);\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}