{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = process.env.REACT_APP_API_BASE && process.env.REACT_APP_API_BASE.replace(/\\/+$/, '') || \"/api/game\";\nconst endpoint = path => `${API_BASE}${path.startsWith(\"/\") ? \"\" : \"/\"}${path}`;\nexport function newGame(size = 4) {\n  return axios.post(endpoint(`/new?size=${encodeURIComponent(size)}`));\n}\nexport function getState(gameId) {\n  return axios.get(endpoint(`/state/${encodeURIComponent(gameId)}`));\n}\n\n// robust move: try multiple common request shapes and return the first successful response.\n// Also rethrows the last error if all attempts fail.\nexport async function move(gameId, direction) {\n  const url = endpoint(\"/move\");\n  const attempts = [\n  // JSON body using \"dir\" (backend expects request param named 'dir' — this covers some servers accepting JSON bodies)\n  {\n    desc: \"JSON {dir}\",\n    call: () => axios.post(url, {\n      dir: direction,\n      gameId\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  },\n  // JSON body using \"direction\" (keep for compatibility)\n  {\n    desc: \"JSON {direction}\",\n    call: () => axios.post(url, {\n      direction,\n      gameId\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  },\n  // query params using \"dir\"\n  {\n    desc: \"query params (dir)\",\n    call: () => axios.post(url, null, {\n      params: {\n        dir: direction,\n        gameId\n      }\n    })\n  },\n  // query params using \"direction\"\n  {\n    desc: \"query params (direction)\",\n    call: () => axios.post(url, null, {\n      params: {\n        direction,\n        gameId\n      }\n    })\n  },\n  // form-urlencoded using \"dir\"\n  {\n    desc: \"form-urlencoded (dir)\",\n    call: () => axios.post(url, new URLSearchParams({\n      dir: direction,\n      gameId\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n  },\n  // form-urlencoded using \"direction\"\n  {\n    desc: \"form-urlencoded (direction)\",\n    call: () => axios.post(url, new URLSearchParams({\n      direction,\n      gameId\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n  }];\n  let lastErr = null;\n  for (const a of attempts) {\n    try {\n      const res = await a.call();\n      console.debug(\"move: successful attempt:\", a.desc, res === null || res === void 0 ? void 0 : res.status);\n      return res;\n    } catch (err) {\n      var _err$response, _err$response2;\n      lastErr = err;\n      console.warn(\"move attempt failed:\", a.desc, {\n        status: err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status,\n        body: err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data,\n        message: err === null || err === void 0 ? void 0 : err.message\n      });\n    }\n  }\n  throw lastErr;\n}\nexport function restart(gameId) {\n  return axios.post(endpoint(\"/restart\"), {\n    gameId\n  });\n}\nexport default {\n  newGame,\n  getState,\n  move,\n  restart\n};","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","replace","endpoint","path","startsWith","newGame","size","post","encodeURIComponent","getState","gameId","get","move","direction","url","attempts","desc","call","dir","headers","params","URLSearchParams","lastErr","a","res","console","debug","status","err","_err$response","_err$response2","warn","response","body","data","message","restart"],"sources":["C:/Users/ashok.MSI/Projects/2048_game_project/2048_game_project_with_ui/frontend/src/api/gameApi.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = (process.env.REACT_APP_API_BASE && process.env.REACT_APP_API_BASE.replace(/\\/+$/,'')) || \"/api/game\";\nconst endpoint = (path) => `${API_BASE}${path.startsWith(\"/\") ? \"\" : \"/\"}${path}`;\n\nexport function newGame(size = 4) {\n  return axios.post(endpoint(`/new?size=${encodeURIComponent(size)}`));\n}\n\nexport function getState(gameId) {\n  return axios.get(endpoint(`/state/${encodeURIComponent(gameId)}`));\n}\n\n// robust move: try multiple common request shapes and return the first successful response.\n// Also rethrows the last error if all attempts fail.\nexport async function move(gameId, direction) {\n  const url = endpoint(\"/move\");\n  const attempts = [\n    // JSON body using \"dir\" (backend expects request param named 'dir' — this covers some servers accepting JSON bodies)\n    { desc: \"JSON {dir}\", call: () => axios.post(url, { dir: direction, gameId }, { headers: { \"Content-Type\": \"application/json\" } }) },\n    // JSON body using \"direction\" (keep for compatibility)\n    { desc: \"JSON {direction}\", call: () => axios.post(url, { direction, gameId }, { headers: { \"Content-Type\": \"application/json\" } }) },\n    // query params using \"dir\"\n    { desc: \"query params (dir)\", call: () => axios.post(url, null, { params: { dir: direction, gameId } }) },\n    // query params using \"direction\"\n    { desc: \"query params (direction)\", call: () => axios.post(url, null, { params: { direction, gameId } }) },\n    // form-urlencoded using \"dir\"\n    { desc: \"form-urlencoded (dir)\", call: () => axios.post(url, new URLSearchParams({ dir: direction, gameId }), { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }) },\n    // form-urlencoded using \"direction\"\n    { desc: \"form-urlencoded (direction)\", call: () => axios.post(url, new URLSearchParams({ direction, gameId }), { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }) }\n  ];\n\n  let lastErr = null;\n  for (const a of attempts) {\n    try {\n      const res = await a.call();\n      console.debug(\"move: successful attempt:\", a.desc, res?.status);\n      return res;\n    } catch (err) {\n      lastErr = err;\n      console.warn(\"move attempt failed:\", a.desc, {\n        status: err?.response?.status,\n        body: err?.response?.data,\n        message: err?.message\n      });\n    }\n  }\n\n  throw lastErr;\n}\n\nexport function restart(gameId) {\n  return axios.post(endpoint(\"/restart\"), { gameId });\n}\n\nexport default { newGame, getState, move, restart };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}