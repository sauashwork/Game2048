{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashok.MSI\\\\Projects\\\\2048_game_project\\\\2048_game_project_with_ui\\\\frontend\\\\src\\\\components\\\\GameBoard.jsx\";\nimport React from 'react';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameBoard({\n  board,\n  newTiles,\n  moveDir\n}) {\n  const size = board.length;\n  const newSet = new Set((newTiles || []).map(([r, c]) => `${r}-${c}`));\n  const dirClass = moveDir ? `move-${moveDir.toLowerCase()}` : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `board ${dirClass}`,\n    style: {\n      gridTemplateColumns: `repeat(${size}, 1fr)`\n    },\n    children: board.map((row, i) => row.map((v, j) => /*#__PURE__*/_jsxDEV(Tile, {\n      value: v,\n      isNew: newSet.has(`${i}-${j}`)\n    }, `${i}-${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Tile","jsxDEV","_jsxDEV","GameBoard","board","newTiles","moveDir","size","length","newSet","Set","map","r","c","dirClass","toLowerCase","className","style","gridTemplateColumns","children","row","i","v","j","value","isNew","has","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashok.MSI/Projects/2048_game_project/2048_game_project_with_ui/frontend/src/components/GameBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport Tile from './Tile';\r\n\r\nexport default function GameBoard({board, newTiles, moveDir}){\r\n  const size = board.length;\r\n  const newSet = new Set((newTiles || []).map(([r, c]) => `${r}-${c}`));\r\n  const dirClass = moveDir ? `move-${moveDir.toLowerCase()}` : '';\r\n  return (\r\n    <div className={`board ${dirClass}`} style={{gridTemplateColumns: `repeat(${size}, 1fr)`}}>\r\n      {board.map((row, i) =>\r\n        row.map((v, j) => (\r\n          <Tile key={`${i}-${j}`} value={v} isNew={newSet.has(`${i}-${j}`)} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAC;EAACC,KAAK;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAC;EAC3D,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAM;EACzB,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAACL,QAAQ,IAAI,EAAE,EAAEM,GAAG,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK,GAAGD,CAAC,IAAIC,CAAC,EAAE,CAAC,CAAC;EACrE,MAAMC,QAAQ,GAAGR,OAAO,GAAG,QAAQA,OAAO,CAACS,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE;EAC/D,oBACEb,OAAA;IAAKc,SAAS,EAAE,SAASF,QAAQ,EAAG;IAACG,KAAK,EAAE;MAACC,mBAAmB,EAAE,UAAUX,IAAI;IAAQ,CAAE;IAAAY,QAAA,EACvFf,KAAK,CAACO,GAAG,CAAC,CAACS,GAAG,EAAEC,CAAC,KAChBD,GAAG,CAACT,GAAG,CAAC,CAACW,CAAC,EAAEC,CAAC,kBACXrB,OAAA,CAACF,IAAI;MAAmBwB,KAAK,EAAEF,CAAE;MAACG,KAAK,EAAEhB,MAAM,CAACiB,GAAG,CAAC,GAAGL,CAAC,IAAIE,CAAC,EAAE;IAAE,GAAtD,GAAGF,CAAC,IAAIE,CAAC,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CACpE,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACC,EAAA,GAbuB5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}